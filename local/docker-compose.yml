version: '3'

services:
  postgres:
    image: postgres:16
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=movies_database
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=123qwe
      - POSTGRES_HOST=localhost
    ports:
      - 5432:5432

  auth:
    build:
      context: ../../auth-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - AUTH_DB_NAME=${DB_NAME}
      - AUTH_DB_USER=${DB_USER}
      - AUTH_DB_PASSWORD=${DB_PASSWORD}
      - AUTH_DB_HOST=${DB_HOST}
      - AUTH_DB_PORT=${DB_PORT}




  # FileAPI
  storage:
    build:
      context: ../../storage-service
      dockerfile: Dockerfile
    ports:
      - "8008:8008"
    environment:
      - STORAGE_DATABASE_NAME=${STORAGE_DATABASE_NAME}
      - STORAGE_DATABASE_USER=${STORAGE_DATABASE_USER}
      - STORAGE_DATABASE_PASSWORD=${STORAGE_DATABASE_PASSWORD}
      - STORAGE_DATABASE_HOST=${STORAGE_DATABASE_HOST}
      - STORAGE_DATABASE_PORT=${STORAGE_DATABASE_PORT}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_SECURE=${MINIO_SECURE}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_storage:/data
    command: server /data --console-address ":9001"

  # Etl
  etl:
    build:
      context: ../../etl-service
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - postgres
      - elasticsearch
    environment:
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL}

  # Api
  search:
    build:
      context: ../../search-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ELASTIC_HOST=${ELASTIC_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - ELASTIC_PORT=${ELASTIC_PORT}
      - PROJECT_NAME=${PROJECT_NAME}
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - cluster.routing.allocation.disk.threshold_enabled=false
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:9200/_cluster/health"]
      start_period: 30s
      timeout: 10s
      interval: 1s
      retries: 10
    volumes:
      - ../../search-service/infra/elastic/elasticsearch/config.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - elasticsearch_data:/usr/share/elasticsearch/data

  redis:
    image: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      start_period: 30s
      timeout: 10s
      interval: 1s
      retries: 10
    volumes:
      - redis_data:/data
  


  
volumes:
  postgres-data:
  # storage
  storage-db-data:
  # admin
  static-data:
  # search
  elasticsearch_data:
  # redis
  redis_data:
  # minio
  minio_storage:


